package com.vocabularytrainer.project.controllers;

import com.vocabularytrainer.project.UserRepository; // import the clas UserRepository
import com.vocabularytrainer.project.User; // import the User statement

import org.springframework.boot.autoconfigure.EnableAutoConfiguration;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*; // Restcontroller, Requestmapping, RequestParameter, GetMapping ...

import org.springframework.beans.factory.annotation.Autowired;

/**
 * ExampleController
 *
 * @author ASD-Morning-4
 *
 */

@EnableAutoConfiguration
@RestController // this class means it is ready for use by Spring MVC to handle web requests

public class Controller {

    /* Hello World Example */
    @RequestMapping("/")
    public ResponseEntity<String> get() {
        return ResponseEntity.ok("Greetings from Spring Boot!");
    }

    /* The Database Example */
    @Autowired  // This means to get the bean called userRepository
                // Which is auto-generated by Spring, we will use it to handle the data
    private UserRepository userRepository;

    @RequestMapping(value = "/add") // , method = RequestMethod.GET) // <-> //@PostMapping(path="/add", method=RequestMethod.POST) // Map ONLY POST Requests
    public String addNewUser (@RequestParam String name
            , @RequestParam String email) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        User n = new User();
        n.setName(name);
        n.setEmail(email);
        userRepository.save(n);
        return "Saved";
    }

    // add entry with: http://localhost:8080/add?name=Alice&email=alice@mail.com

    @RequestMapping(path="/all")
    public Iterable<User> getAllUsers() {
        // This returns a JSON or XML with the users
        return userRepository.findAll();
    }

    // show entries (as json): http://localhost:8080/all
}
